# Check the code with flake8 and if successful, run set up postgres database and run tests.

name: Check and Test

on: [push, pull_request]

permissions:
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    container: python:3.12.3-slim

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 vulture
        shell: bash

      - name: Check with flake8
        run: |
          flake8 ./src
          vulture

  test:
    runs-on: ubuntu-latest
    needs: 
      - check

    container: python:3.12.3-slim
    
    services:
      postgres:
        image: postgres:14

        env:
          POSTGRES_DB: pss-fleet-data-test
          POSTGRES_PASSWORD: pgpassword
          POSTGRES_USER: pguser

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dev dependencies
        run: |
          python -m pip install -r requirements-dev.lock
          
      - name: Test with pytest
        run: |
          pytest --cov=./src/api -x ./tests
        env:
          DATABASE_NAME: pss-fleet-data-test
          DATABASE_URL: pguser:pgpassword@postgres:5432
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
